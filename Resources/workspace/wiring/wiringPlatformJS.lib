/*
 * Copyright (c) 2014 CoNWeT Lab., Universidad Politecnica de Madrid.
 * Copyright (c) 2014 by Center Open Middleware. All Rights Reserved.
 * Titanium Appcelerator 3.3.0GA
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 */
 
(function () {

    "use strict";

    var id = null;
    var prefs = null;
	var inputs = {};
	var handlers = new Array();
	var request = new Array();
	var requestCallbacks = {};
	var requestCallbacksKey = 0;
	var type;

	// Platform definition    
    Object.defineProperty(window, 'MashupPlatform', {value: {}});
	Object.defineProperty(window.MashupPlatform, 'setPlatformInfo', {
        value: function setPlatformInfo(newId, typeP) {
        	id = newId;
        	type = typeP;
        	for(var i = 0; i < request.length; i++){
        		if(request[i][0]){
        			Ti.App.fireEvent('makeRequest', {
        				'id': id, 
        				'idRequest': request[i][2], 
        				'typeView':type, 
        				'url': request[i][0], 
        				'options': request[i][1]
        			});
        		}
        	}
            request = new Array();
        	for(var i = 0; i < handlers.length; i++){
        		Ti.App.fireEvent('pushEvent', {
        			'id': id, 
        			'name': handlers[i][0], 
        			'dataEvent': handlers[i][1]
        		});
        	}
        	handlers = new Array();
        	if(prefs !== null){
        		Ti.App.fireEvent('getPrefs',{
        			'id': id,
        			'typeView': type
        		});
        	}
        }
    });
    Object.defineProperty(window.MashupPlatform, 'activateCallback', {
        value: function activateCallback(inputName, data) {
        	inputs[inputName](data);
        }
    });
    Object.defineProperty(window.MashupPlatform, 'activateRequestCallback', {
        value: function activateRequestCallback(key, values) {
            if(values === 'Error'){
                requestCallbacks[key]["fail"](values);  
                Ti.API.info('activateRequestCallback id[key]: ' + id + '['+key+'] andResult: failed');  
            }
            else {
                requestCallbacks[key]["succ"](values);
                Ti.API.info('activateRequestCallback id[key]: ' + id + '['+key+'] andResult: success');  
            }
            delete requestCallbacks[key];
        }
    });
	Object.defineProperty(window.MashupPlatform, 'activatePreferenceCallback', {
		value: function activatePreferenceCallback(values) {
            prefs(values);
        }
	});

    // Wiring Module
    Object.defineProperty(window.MashupPlatform, 'wiring', {value: {}});
    Object.defineProperty(window.MashupPlatform.wiring, 'registerCallback', {
        value: function registerCallback(inputName, callback) {
            inputs[inputName] = callback;
        }
    });
    Object.defineProperty(window.MashupPlatform.wiring, 'pushEvent', {
        value: function pushEvent(outputName, data, options) {
            if(id === null){
            	handlers.push([outputName, data]);
            }
            else Ti.App.fireEvent('pushEvent', {
            	'id': id, 
            	'name': outputName, 
            	'dataEvent': data
            });
        }
    });
    Object.preventExtensions(window.MashupPlatform.wiring);

	// HTTP Module
	Object.defineProperty(window.MashupPlatform, 'http', {value: {}});
 	Object.defineProperty(window.MashupPlatform.http, 'makeRequest', {
 		value: function makeRequest(url, options) {
            requestCallbacks[requestCallbacksKey] = {
                succ: options["onSuccess"],
                fail: options["onFailure"]
            };
 			if(id === null){
 				request.push([url, options, requestCallbacksKey]);
 			}
 			else{
        		Ti.App.fireEvent('makeRequest', {
        			'id': id, 
        			'idRequest': requestCallbacksKey, 
        			'typeView':type, 
        			'url': url, 
        			'options': options
        		});
 			}
            requestCallbacksKey = requestCallbacksKey + 1;
      	}
    });
    Object.preventExtensions(window.MashupPlatform.http);
   
    // Preferences Module
    Object.defineProperty(window.MashupPlatform, 'prefs', {value: {}});
	Object.defineProperty(window.MashupPlatform.prefs, 'get', {
		value: function get(key) {
			return "";
		}
	});
	Object.defineProperty(window.MashupPlatform.prefs, 'registerCallback', {
		value: function registerCallback(callback) {
			prefs = callback;
        }
	});
	Object.preventExtensions(window.MashupPlatform.prefs); 

})();
